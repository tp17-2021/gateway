version: "3.8"

services:
  # The name of the service to run
  voting-service:
    build:
      # The path to the service's repository
      context: ./voting-service
      dockerfile: ./Dockerfile
    container_name: voting-service
    restart: unless-stopped
    depends_on:
      - vote-db
    # export useful environment variables to the service's container
    environment:
      - VOTE_DB_PORT=27017
      - VOTE_DB_HOST=vote-db
      - VOTE_DB_DB_NAME=vote-db
      - VOTE_DB_COLLECTION=votes
  
  synchronization-service:
    build:
      context: ./synchronization-service
      dockerfile: ./Dockerfile
    container_name: synchronization-service
    restart: unless-stopped
    depends_on:
      - vote-db
    # export useful environment variables to the service's container
    environment:
      - VOTE_DB_PORT=27017
      - VOTE_DB_HOST=vote-db
      - VOTE_DB_DB_NAME=vote-db
      - VOTE_DB_COLLECTION=votes

  web:
    container_name: web
    image: nginx:alpine
    depends_on:
      - voting-service
      - synchronization-service
      - vote-db
    ports:
      #Port mapping:"Host OS port:container(Nginx)Port"
      - "80:80"
    volumes:
      #volume mount:"Host OS path:Path in the container"
      - ./web/conf.d:/etc/nginx/conf.d
      - ./statevector/gateway:/usr/share/nginx/statevector/gateway
      - ./statevector/config:/usr/share/nginx/statevector/config

  vote-db:
    # use existing mongo image from dockerhub
    image: mongo
    container_name: vote-db
    restart: unless-stopped
    ports:
      - 8223:27017
    # use vote-db-data directory as volume to store data
    volumes:
      - ./vote-db-data:/data/db
    # set user and group to mongo
    environment:
      - PUID=1000
      - PGID=1000

